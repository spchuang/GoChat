'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
//import GoGating from '../GoGating';


var _fbLocalChatBot = require('fb-local-chat-bot');

var _fbLocalChatBot2 = _interopRequireDefault(_fbLocalChatBot);

var _User = require('../class/User');

var _User2 = _interopRequireDefault(_User);

var _Game = require('../class/Game');

var _Game2 = _interopRequireDefault(_Game);

var _Translator = require('../translations/Translator');

var _config = require('../config');

var _config2 = _interopRequireDefault(_config);

var _EncryptUtils = require('../utils/EncryptUtils');

var _EncryptUtils2 = _interopRequireDefault(_EncryptUtils);

var _querystring = require('querystring');

var _querystring2 = _interopRequireDefault(_querystring);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PostBackTypes = {
  CREATE_GAME: 'CREATE_GAME',
  JOIN_GAME: 'JOIN_GAME',
  PLAY_WITH_SELF: 'PLAY_WITH_SELF',
  PLAY_WITH_AI: 'PLAY_WITH_AI',
  JOIN_GAME_WITH_CODE: 'JOIN_GAME_WITH_CODE',

  SEE_HELP: 'SEE_HELP',
  SHARE: 'SHARE',
  SHOW_MESSENGER_WEBVIEW_TOKEN: 'SHOW_MESSENGER_WEBVIEW_TOKEN', // deprecated
  SHOW_GAME_HISTORY: 'SHOW_GAME_HISTORY',
  DOWNLOAD_SGF: 'DOWNLOAD_SGF',

  // language settings
  SHOW_LANGUAGES: 'SHOW_LANGUAGES',
  SET_LANGUAGE: 'SET_LANGUAGE',

  // in game commands
  RESIGN_GAME: 'RESIGN_GAME',
  SHOW_CURRENT_GAME_STATUS: 'SHOW_CURRENT_GAME_STATUS',
  PASS_MOVE: 'PASS_MOVE',
  UNDO_MOVE: 'UNDO_MOVE',
  FOCUS_ON_GAME: 'FOCUS_ON_GAME',
  PLAY_ANOTHER_GAME: 'PLAY_ANOTHER_GAME',
  SHOW_ACTIVE_GAMES: 'SHOW_ACTIVE_GAMES',
  SHOW_CANNED_MESSAGES: 'SHOW_CANNED_MESSAGES', // deprecated
  SEND_CANNED_MESSAGE: 'SEND_CANNED_MESSAGE', // deprecated
  SHOW_MESSAGE_VIEW: 'SHOW_MESSAGE_VIEW',

  // game room
  CREATE_PRIVATE_ROOM: 'CREATE_PRIVATE_ROOM',
  SEND_GAME_ROOM_SHARE: 'SEND_GAME_ROOM_SHARE'
};

function createPostbackButton(text, type, params) {
  // append params to post type callback
  var payload = params ? type + ':' + params.join(':') : type;
  return _fbLocalChatBot2.default.createPostbackButton(text, payload);
}

function createQuickReplyButton(text, type, params) {
  // append params to post type callback
  var payload = params ? type + ':' + params.join(':') : type;
  return _fbLocalChatBot2.default.createQuickReply(text, payload);
}

function createDefaultButtons(user) {
  var language = user.getLanguage();
  return [createQuickReplyButton((0, _Translator.got)('button.setLanguage', language), PostBackTypes.SHOW_LANGUAGES), createQuickReplyButton((0, _Translator.got)('button.share', language), PostBackTypes.SHARE)];
}

function sendNormalHelpMenu(user, text) {
  var encryptID = _EncryptUtils2.default.encrypt(user.getFBID());

  // Hopefully we can open webview from quick repies in the future
  var messageData = {
    attachment: {
      'type': 'template',
      'payload': {
        'template_type': 'button',
        'text': text,
        'buttons': [getCreateGameURLButton(user.getLanguage(), encryptID), getJoinGameURLButton(user.getLanguage(), encryptID)]
      }
    },
    quick_replies: createDefaultButtons(user)
  };

  _fbLocalChatBot2.default.send(user.getFBID(), messageData);
}

function _getURLParams(language, encryptID, extra) {
  // skip appending user id if it's not provided
  return encryptID ? _querystring2.default.stringify(_extends({}, extra, { language: language, u: encryptID })) : _querystring2.default.stringify(_extends({}, extra, { language: language }));
}

function getCreateGameURLButton(language, encryptID) {
  var queryParams = _getURLParams(language, encryptID);
  return _fbLocalChatBot2.default.createURLButton((0, _Translator.got)('button.createGame', language), _config2.default.url + '/game/create?' + queryParams, 'tall', true);
}

// useMessengerExtensions
function getJoinGameURLButton(language, encryptID) {
  var queryParams = _getURLParams(language, encryptID);
  return _fbLocalChatBot2.default.createURLButton((0, _Translator.got)('button.joinARoom', language), _config2.default.url + '/joinGame?' + queryParams, 'compact', true);
}

// useMessengerExtensions
function getMessageURLButton(title, language, receiverID, encryptID) {
  var queryParamsString = _getURLParams(language, encryptID, { receiverID: receiverID });
  return _fbLocalChatBot2.default.createURLButton(title, _config2.default.url + '/message?' + queryParamsString, 'full', true);
}

// useMessengerExtensions
function getBoardURLButton(title, queryParams) {
  return _fbLocalChatBot2.default.createURLButton(title, _config2.default.url + '/simulateBoard?' + queryParams, 'full', true);
}

// useMessengerExtensions
function getCountScoreURLButton(title, user, queryParams) {
  var encryptID = _EncryptUtils2.default.encrypt(user.getFBID());
  var queryParamsString = _getURLParams(user.getLanguage(), encryptID, queryParams);
  return _fbLocalChatBot2.default.createURLButton(title, _config2.default.url + '/countScore?' + queryParamsString, 'full', true);
}

// useMessengerExtensions
function getSimulateBoardURLButton(language, encryptID) {
  var queryParams = _getURLParams(language, encryptID);
  return getBoardURLButton((0, _Translator.got)('button.simulateGame', language), queryParams);
}

function sendFocusedGameMessage(user, game, message, isFocused) {
  var language = user.getLanguage();
  if (isFocused) {
    _fbLocalChatBot2.default.sendText(user.getFBID(), message);
  } else {
    _fbLocalChatBot2.default.sendButtons(user.getFBID(), message + ' ' + (0, _Translator.got)('inGameMessage.newGameMoveAskUserToFocus', language), [createPostbackButton((0, _Translator.got)('button.focusOnGame', language), PostBackTypes.FOCUS_ON_GAME, [game.getID()])]);
  }
}

module.exports = {
  PostBackTypes: PostBackTypes,
  sendNormalHelpMenu: sendNormalHelpMenu,
  createDefaultButtons: createDefaultButtons,
  createPostbackButton: createPostbackButton,
  createQuickReplyButton: createQuickReplyButton,
  sendFocusedGameMessage: sendFocusedGameMessage,
  getBoardURLButton: getBoardURLButton,
  getCreateGameURLButton: getCreateGameURLButton,
  getJoinGameURLButton: getJoinGameURLButton,
  getSimulateBoardURLButton: getSimulateBoardURLButton,
  getCountScoreURLButton: getCountScoreURLButton,
  getMessageURLButton: getMessageURLButton
};
//# sourceMappingURL=data:application/json;base64,