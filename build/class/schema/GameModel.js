'use strict';

var GameModel = function GameModel(sequelize, DataTypes) {
  var Game = sequelize.define('Game', {
    isBlackTurn: {
      type: DataTypes.BOOLEAN,
      allowNull: false
    },
    weiqiConsecutivePasses: {
      type: DataTypes.INTEGER,
      allowNull: false
    },
    weiqiHistory: {
      type: DataTypes.TEXT,
      allowNull: false,
      customType: {
        type: 'JSON',
        flowType: 'Object'
      }
    },
    weiqiBoard: {
      type: DataTypes.TEXT,
      allowNull: false,
      customType: {
        type: 'JSON',
        flowType: 'Object'
      }
    },
    weiqiBoardSize: {
      type: DataTypes.INTEGER,
      allowNull: false,
      customType: {
        flowType: 'BoardSize'
      }
    },
    stonesHistory: {
      type: DataTypes.TEXT,
      allowNull: true,
      customType: {
        type: 'JSON',
        flowType: 'Array<StoneMove>'
      }
    },
    boardImageURL: {
      type: DataTypes.STRING,
      allowNull: false
    },
    status: {
      type: DataTypes.INTEGER,
      allowNull: false,
      customType: {
        flowType: 'GameStatusType'
      }
    },
    komi: {
      type: DataTypes.DECIMAL(5, 2),
      allowNull: false,
      defaultValue: 6.5
    },
    winsBy: {
      type: DataTypes.DECIMAL(6, 2),
      allowNull: true
    },
    handicap: {
      type: DataTypes.INTEGER,
      allowNull: false,
      defaultValue: 0
    }
  }, {
    charset: 'utf8',
    collate: 'utf8_unicode_ci',
    freezeTableName: true });

  // Model tableName will be the same as the model name
  Game.associate = function (models) {
    Game.belongsTo(models.User, { foreignKey: 'whiteUserID' });
    Game.belongsTo(models.User, { foreignKey: 'blackUserID' });
  };

  return Game;
};

module.exports = GameModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGFzcy9zY2hlbWEvR2FtZU1vZGVsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsSUFBTSxZQUFZLFNBQVosU0FBWSxDQUFTLFNBQVQsRUFBNEIsU0FBNUIsRUFBK0M7QUFDL0QsTUFBSSxPQUFPLFVBQVUsTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNsQyxpQkFBYTtBQUNYLFlBQU0sVUFBVSxPQURMO0FBRVgsaUJBQVc7QUFGQSxLQURxQjtBQUtsQyw0QkFBdUI7QUFDckIsWUFBTSxVQUFVLE9BREs7QUFFckIsaUJBQVc7QUFGVSxLQUxXO0FBU2xDLGtCQUFjO0FBQ1osWUFBTSxVQUFVLElBREo7QUFFWixpQkFBVyxLQUZDO0FBR1osa0JBQVk7QUFDVixjQUFNLE1BREk7QUFFVixrQkFBVTtBQUZBO0FBSEEsS0FUb0I7QUFpQmxDLGdCQUFXO0FBQ1QsWUFBTSxVQUFVLElBRFA7QUFFVCxpQkFBVyxLQUZGO0FBR1Qsa0JBQVk7QUFDVixjQUFNLE1BREk7QUFFVixrQkFBVTtBQUZBO0FBSEgsS0FqQnVCO0FBeUJsQyxvQkFBZ0I7QUFDZCxZQUFNLFVBQVUsT0FERjtBQUVkLGlCQUFXLEtBRkc7QUFHZCxrQkFBWTtBQUNWLGtCQUFVO0FBREE7QUFIRSxLQXpCa0I7QUFnQ2xDLG1CQUFlO0FBQ2IsWUFBTSxVQUFVLElBREg7QUFFYixpQkFBVyxJQUZFO0FBR2Isa0JBQVk7QUFDVixjQUFNLE1BREk7QUFFVixrQkFBVTtBQUZBO0FBSEMsS0FoQ21CO0FBd0NsQyxtQkFBZTtBQUNiLFlBQU0sVUFBVSxNQURIO0FBRWIsaUJBQVc7QUFGRSxLQXhDbUI7QUE0Q2xDLFlBQVE7QUFDTixZQUFNLFVBQVUsT0FEVjtBQUVOLGlCQUFXLEtBRkw7QUFHTixrQkFBWTtBQUNWLGtCQUFVO0FBREE7QUFITixLQTVDMEI7QUFtRGxDLFVBQU07QUFDSixZQUFNLFVBQVUsT0FBVixDQUFrQixDQUFsQixFQUFxQixDQUFyQixDQURGO0FBRUosaUJBQVcsS0FGUDtBQUdKLG9CQUFjO0FBSFYsS0FuRDRCO0FBd0RsQyxZQUFRO0FBQ04sWUFBTSxVQUFVLE9BQVYsQ0FBa0IsQ0FBbEIsRUFBcUIsQ0FBckIsQ0FEQTtBQUVOLGlCQUFXO0FBRkwsS0F4RDBCO0FBNERsQyxjQUFVO0FBQ1IsWUFBTSxVQUFVLE9BRFI7QUFFUixpQkFBVyxLQUZIO0FBR1Isb0JBQWM7QUFITjtBQTVEd0IsR0FBekIsRUFpRVI7QUFDRCxhQUFTLE1BRFI7QUFFRCxhQUFTLGlCQUZSO0FBR0QscUJBQWlCLElBSGhCLEVBakVRLENBQVg7OztBQXVFQSxPQUFLLFNBQUwsR0FBaUIsVUFBUyxNQUFULEVBQWlCO0FBQ2hDLFNBQUssU0FBTCxDQUFlLE9BQU8sSUFBdEIsRUFBNEIsRUFBQyxZQUFZLGFBQWIsRUFBNUI7QUFDQSxTQUFLLFNBQUwsQ0FBZSxPQUFPLElBQXRCLEVBQTRCLEVBQUMsWUFBWSxhQUFiLEVBQTVCO0FBQ0QsR0FIRDs7QUFLQSxTQUFPLElBQVA7QUFDRCxDQTlFRDs7QUFnRkEsT0FBTyxPQUFQLEdBQWlCLFNBQWpCIiwiZmlsZSI6IkdhbWVNb2RlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmNvbnN0IEdhbWVNb2RlbCA9IGZ1bmN0aW9uKHNlcXVlbGl6ZTogT2JqZWN0LCBEYXRhVHlwZXM6IE9iamVjdCkge1xuICB2YXIgR2FtZSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0dhbWUnLCB7XG4gICAgaXNCbGFja1R1cm46IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICAgIHdlaXFpQ29uc2VjdXRpdmVQYXNzZXM6e1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgIH0sXG4gICAgd2VpcWlIaXN0b3J5OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuVEVYVCxcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICBjdXN0b21UeXBlOiB7XG4gICAgICAgIHR5cGU6ICdKU09OJyxcbiAgICAgICAgZmxvd1R5cGU6ICdPYmplY3QnLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHdlaXFpQm9hcmQ6e1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlRFWFQsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgY3VzdG9tVHlwZToge1xuICAgICAgICB0eXBlOiAnSlNPTicsXG4gICAgICAgIGZsb3dUeXBlOiAnT2JqZWN0JyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICB3ZWlxaUJvYXJkU2l6ZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgY3VzdG9tVHlwZToge1xuICAgICAgICBmbG93VHlwZTogJ0JvYXJkU2l6ZScsXG4gICAgICB9LFxuICAgIH0sXG4gICAgc3RvbmVzSGlzdG9yeToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlRFWFQsXG4gICAgICBhbGxvd051bGw6IHRydWUsXG4gICAgICBjdXN0b21UeXBlOiB7XG4gICAgICAgIHR5cGU6ICdKU09OJyxcbiAgICAgICAgZmxvd1R5cGU6ICdBcnJheTxTdG9uZU1vdmU+JyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBib2FyZEltYWdlVVJMOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICAgIHN0YXR1czoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgY3VzdG9tVHlwZToge1xuICAgICAgICBmbG93VHlwZTogJ0dhbWVTdGF0dXNUeXBlJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBrb21pOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuREVDSU1BTCg1LCAyKSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICBkZWZhdWx0VmFsdWU6IDYuNSxcbiAgICB9LFxuICAgIHdpbnNCeToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkRFQ0lNQUwoNiwgMiksXG4gICAgICBhbGxvd051bGw6IHRydWUsXG4gICAgfSxcbiAgICBoYW5kaWNhcDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgZGVmYXVsdFZhbHVlOiAwLFxuICAgIH0sXG4gIH0sIHtcbiAgICBjaGFyc2V0OiAndXRmOCcsXG4gICAgY29sbGF0ZTogJ3V0ZjhfdW5pY29kZV9jaScsXG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlLCAvLyBNb2RlbCB0YWJsZU5hbWUgd2lsbCBiZSB0aGUgc2FtZSBhcyB0aGUgbW9kZWwgbmFtZVxuICB9KTtcblxuICBHYW1lLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIEdhbWUuYmVsb25nc1RvKG1vZGVscy5Vc2VyLCB7Zm9yZWlnbktleTogJ3doaXRlVXNlcklEJ30pO1xuICAgIEdhbWUuYmVsb25nc1RvKG1vZGVscy5Vc2VyLCB7Zm9yZWlnbktleTogJ2JsYWNrVXNlcklEJ30pO1xuICB9O1xuXG4gIHJldHVybiBHYW1lO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBHYW1lTW9kZWw7XG4iXX0=