'use strict';

var GameRoomModel = function GameRoomModel(sequelize, DataTypes) {
  var GameRoom = sequelize.define('GameRoom', {
    code: {
      type: DataTypes.STRING,
      unique: true,
      allowNull: false
    },
    boardSize: {
      type: DataTypes.INTEGER,
      allowNull: false,
      customType: {
        flowType: 'BoardSize'
      }
    },
    isPrivate: {
      type: DataTypes.BOOLEAN,
      allowNull: false
    },
    isOwnerBlack: {
      type: DataTypes.BOOLEAN,
      allowNull: false,
      defaultValue: true
    },
    komi: {
      type: DataTypes.DECIMAL(5, 2),
      allowNull: false,
      defaultValue: 6.5
    },
    handicap: {
      type: DataTypes.INTEGER,
      allowNull: false,
      defaultValue: 0
    }
  }, {
    charset: 'utf8',
    collate: 'utf8_unicode_ci',
    freezeTableName: true });

  // Model tableName will be the same as the model name
  GameRoom.associate = function (models) {
    GameRoom.belongsTo(models.User, { foreignKey: 'ownerID' });
  };

  return GameRoom;
};

module.exports = GameRoomModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGFzcy9zY2hlbWEvR2FtZVJvb21Nb2RlbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLElBQU0sZ0JBQWdCLFNBQWhCLGFBQWdCLENBQVMsU0FBVCxFQUE0QixTQUE1QixFQUErQztBQUNuRSxNQUFJLFdBQVcsVUFBVSxNQUFWLENBQWlCLFVBQWpCLEVBQTZCO0FBQzFDLFVBQU07QUFDSixZQUFNLFVBQVUsTUFEWjtBQUVKLGNBQVEsSUFGSjtBQUdKLGlCQUFXO0FBSFAsS0FEb0M7QUFNMUMsZUFBVztBQUNULFlBQU0sVUFBVSxPQURQO0FBRVQsaUJBQVcsS0FGRjtBQUdULGtCQUFZO0FBQ1Ysa0JBQVU7QUFEQTtBQUhILEtBTitCO0FBYTFDLGVBQVc7QUFDVCxZQUFNLFVBQVUsT0FEUDtBQUVULGlCQUFXO0FBRkYsS0FiK0I7QUFpQjFDLGtCQUFjO0FBQ1osWUFBTSxVQUFVLE9BREo7QUFFWixpQkFBVyxLQUZDO0FBR1osb0JBQWM7QUFIRixLQWpCNEI7QUFzQjFDLFVBQU07QUFDSixZQUFNLFVBQVUsT0FBVixDQUFrQixDQUFsQixFQUFxQixDQUFyQixDQURGO0FBRUosaUJBQVcsS0FGUDtBQUdKLG9CQUFjO0FBSFYsS0F0Qm9DO0FBMkIxQyxjQUFVO0FBQ1IsWUFBTSxVQUFVLE9BRFI7QUFFUixpQkFBVyxLQUZIO0FBR1Isb0JBQWM7QUFITjtBQTNCZ0MsR0FBN0IsRUFnQ1o7QUFDRCxhQUFTLE1BRFI7QUFFRCxhQUFTLGlCQUZSO0FBR0QscUJBQWlCLElBSGhCLEVBaENZLENBQWY7OztBQXNDQSxXQUFTLFNBQVQsR0FBcUIsVUFBUyxNQUFULEVBQWlCO0FBQ3BDLGFBQVMsU0FBVCxDQUFtQixPQUFPLElBQTFCLEVBQWdDLEVBQUMsWUFBWSxTQUFiLEVBQWhDO0FBQ0QsR0FGRDs7QUFJQSxTQUFPLFFBQVA7QUFDRCxDQTVDRDs7QUE4Q0EsT0FBTyxPQUFQLEdBQWlCLGFBQWpCIiwiZmlsZSI6IkdhbWVSb29tTW9kZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAZmxvd1xuXG5jb25zdCBHYW1lUm9vbU1vZGVsID0gZnVuY3Rpb24oc2VxdWVsaXplOiBPYmplY3QsIERhdGFUeXBlczogT2JqZWN0KSB7XG4gIHZhciBHYW1lUm9vbSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0dhbWVSb29tJywge1xuICAgIGNvZGU6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICB1bmlxdWU6IHRydWUsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgIH0sXG4gICAgYm9hcmRTaXplOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICBjdXN0b21UeXBlOiB7XG4gICAgICAgIGZsb3dUeXBlOiAnQm9hcmRTaXplJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBpc1ByaXZhdGU6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICAgIGlzT3duZXJCbGFjazoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkJPT0xFQU4sXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgZGVmYXVsdFZhbHVlOiB0cnVlLFxuICAgIH0sXG4gICAga29taToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkRFQ0lNQUwoNSwgMiksXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgZGVmYXVsdFZhbHVlOiA2LjUsXG4gICAgfSxcbiAgICBoYW5kaWNhcDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgZGVmYXVsdFZhbHVlOiAwLFxuICAgIH0sXG4gIH0sIHtcbiAgICBjaGFyc2V0OiAndXRmOCcsXG4gICAgY29sbGF0ZTogJ3V0ZjhfdW5pY29kZV9jaScsXG4gICAgZnJlZXplVGFibGVOYW1lOiB0cnVlLCAvLyBNb2RlbCB0YWJsZU5hbWUgd2lsbCBiZSB0aGUgc2FtZSBhcyB0aGUgbW9kZWwgbmFtZVxuICB9KTtcblxuICBHYW1lUm9vbS5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBHYW1lUm9vbS5iZWxvbmdzVG8obW9kZWxzLlVzZXIsIHtmb3JlaWduS2V5OiAnb3duZXJJRCd9KTtcbiAgfTtcblxuICByZXR1cm4gR2FtZVJvb207XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWVSb29tTW9kZWw7XG4iXX0=